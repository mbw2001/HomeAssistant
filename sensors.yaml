- platform: uptime
- platform: version
  source: local
- platform: version
  source: docker
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_utc'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'
- platform: template
  sensors:
    320i_remaining_fuel_percent:
      friendly_name: Brændstof
      value_template: '{{ states(''sensor.320i_remaining_fuel'') | int / 0.6 }}'
      unit_of_measurement: '%'
    doorbell_power:
      friendly_name: Hoveddør Ringeklokke Batteri
      value_template: '{{ state_attr(''sensor.hoveddor_info'', ''batteryLevel'')  }}'
      device_class: battery
    tv_stats:
      friendly_name: TV Stats
      value_template:  >-
          {% if is_state('media_player.alrum_media', 'Off') %}
            Off
          {% else %}
            On
          {% endif %}
      icon_template: mdi:television
      attribute_templates:
        today: '{{ state_attr(''sensor.alrum_tv_today'', ''value'') }}'
        yesterday: '{{ state_attr(''sensor.alrum_tv_yesterday'', ''value'') }}'
- platform: history_stats
  name: alrum_tv_today
  entity_id: media_player.alrum_tv
  state: 'on'
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: alrum_tv_yesterday
  entity_id: media_player.alrum_tv
  state: 'on'
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    hours: 24
- platform: history_stats
  name: Tumle Runtime Today
  entity_id: vacuum.tumle
  state: 'cleaning'
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: Michael Home
  entity_id: person.michael
  state: 'home'
  end: '{{ now() }}'
  type: ratio
  duration:
    days: 7
- platform: history_stats
  name: Camilla Home
  entity_id: person.camilla
  state: 'home'
  end: '{{ now() }}'
  type: ratio
  duration:
    days: 7
# - platform: influxdb
#   api_version: 2
#   ssl: false
#   host: influxdb
#   port: 8086
#   token: !secret influxdb_token
#   organization: mbw.dk
#   bucket: homeassistant
#   queries_flux:
#     - name: "Packet Loss"
#       unit_of_measurement: "%"
#       group_function: max
#       bucket: telegraf
#       query: >
#         filter(fn: (r) => r["_measurement"] == "ping")
#         |> filter(fn: (r) => r["_field"] == "percent_packet_loss")
#         |> aggregateWindow(every: 30m, fn: max, createEmpty: false)
#         |> yield(name: "Packet Loss")
#       range_start: "-1d"
