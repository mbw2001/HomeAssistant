homeassistant:
  name: Home
  latitude: !secret home_lattitude
  longitude: !secret home_longtitude
  elevation: !secret home_elevation
  unit_system: metric
  time_zone: !secret home_timezone
  customize: !include customize.yaml
  auth_providers:
   - type: homeassistant

frontend:
  themes: !include themes.yaml

config:

http:
  base_url: !secret base_url
  cors_allowed_origins:
    - https://google.com
    - https://home-assistant.io
  trusted_proxies: 127.0.0.1
  use_x_forwarded_for: True
  ip_ban_enabled: True
  login_attempts_threshold: 3

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Log Severities: notset, debug, info, warn, warning, error, fatal, critical
logger:
  default: warning
  logs:
    DenonAVR: critical

recorder:
  db_url: !secret db_url
  purge_interval: 7
  purge_keep_days: 14
  exclude:
    entities:
      - sensor.date
      - sensor.time

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:
  exclude:
    entities:
      - sensor.yr_symbol

# Track the sun
sun:

map:

wake_on_lan:

notify:
  platform: html5
  name: html5-notify
  gcm_api_key: !secret gcm_api_key
  gcm_sender_id: !secret gcm_sender_id
mqtt:
  broker: !secret mqtt_broker
  port: !secret mqtt_port
  username: !secret mqtt_username
  password: !secret mqtt_password

ifttt:
  key: !secret ifttt_key
tado:
  username: !secret tado_username
  password: !secret tado_password
hue: !include hue.yaml

zone: !include zones.yaml
device_tracker: !include device_trackers.yaml
media_player: !include media_players.yaml
cast: !include cast.yaml
sensor: !include sensors.yaml
remote: !include remotes.yaml
automation: !include automations.yaml
script: !include scripts.yaml
input_boolean: !include input_boolean.yaml
input_datetime: !include input_datetime.yaml
shell_command:
  bedroom_tv_start_kodi: python -c "import socket; s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.sendto(bytes('YatseStart-Xbmc', 'utf-8'), ('10.0.1.16', 5600))"
